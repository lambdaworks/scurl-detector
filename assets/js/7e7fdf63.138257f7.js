"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[254],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),f=o,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1471:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={id:"overview_usage",title:"Usage"},i=void 0,l={unversionedId:"overview/overview_usage",id:"overview/overview_usage",title:"Usage",description:"URLs",source:"@site/docs/overview/overview_usage.md",sourceDirName:"overview",slug:"/overview/overview_usage",permalink:"/scurl-detector/overview/overview_usage",draft:!1,editUrl:"https://github.com/lambdaworks/scurl-detector/edit/main/website/docs/overview/overview_usage.md",tags:[],version:"current",frontMatter:{id:"overview_usage",title:"Usage"},sidebar:"overview_sidebar",previous:{title:"Overview",permalink:"/scurl-detector/overview/overview_index"},next:{title:"Example",permalink:"/scurl-detector/overview/overview_example"}},c={},s=[{value:"URLs",id:"urls",level:2},{value:"UrlDetector",id:"urldetector",level:2},{value:"Config",id:"config",level:2},{value:"UrlDetectorOptions",id:"urldetectoroptions",level:2},{value:"Extracting",id:"extracting",level:2}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"urls"},"URLs"),(0,o.kt)("p",null,"This library uses the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lemonlabsuk/scala-uri"},"scala-uri")," library for representing URLs, so you will need to include it as a dependency in your project."),(0,o.kt)("h2",{id:"urldetector"},"UrlDetector"),(0,o.kt)("p",null,"To use the Scala URL Detector library, you need to import the ",(0,o.kt)("inlineCode",{parentName:"p"},"UrlDetector")," class:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import io.lambdaworks.detection.UrlDetector\n")),(0,o.kt)("p",null,"An ",(0,o.kt)("inlineCode",{parentName:"p"},"apply")," method is defined inside the companion object for instantiating a ",(0,o.kt)("inlineCode",{parentName:"p"},"UrlDetector")," from a ",(0,o.kt)("inlineCode",{parentName:"p"},"Config"),", which affects the behavior of the URL detector:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"object UrlDetector {\n\n  def apply(config: Config): UrlDetector\n  \n}\n")),(0,o.kt)("p",null,"If you want to instantiate a ",(0,o.kt)("inlineCode",{parentName:"p"},"UrlDetector")," with the default configuration, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"UrlDetector.default"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"object UrlDetector {\n\n  lazy val default: UrlDetector = UrlDetector(Config.default)\n\n}\n")),(0,o.kt)("h2",{id:"config"},"Config"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Config")," is a case class in which you can specify ",(0,o.kt)("inlineCode",{parentName:"p"},"options")," in the form of ",(0,o.kt)("inlineCode",{parentName:"p"},"UrlDetectorOptions"),", as well a set of ",(0,o.kt)("inlineCode",{parentName:"p"},"allowed")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"denied")," hosts of type ",(0,o.kt)("inlineCode",{parentName:"p"},"Set[Host]"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"final case class Config(\n  options: UrlDetectorOptions,\n  allowed: Set[Host],\n  denied: Set[Host]\n)\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"allowed")," represents the hosts of URLs which the detector is supposed to detect, while ",(0,o.kt)("inlineCode",{parentName:"p"},"denied")," specifies the hosts of URLs which the detector should ignore. You don't have to specify a subdomain, as they are ignored inside the detector.\nYou can get the default ",(0,o.kt)("inlineCode",{parentName:"p"},"Config")," using ",(0,o.kt)("inlineCode",{parentName:"p"},"Config.default"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"object Config {\n\n  lazy val default: Config = Config(UrlDetectorOptions.Default, Set.empty, Set.empty)\n\n}\n")),(0,o.kt)("p",null,"You can create a new ",(0,o.kt)("inlineCode",{parentName:"p"},"Config")," from an existing one using the following ",(0,o.kt)("inlineCode",{parentName:"p"},"Config")," methods:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"def withOptions(options: UrlDetectorOptions): Config\n\ndef withAllowed(urls: Set[Host]): Config\n\ndef withDenied(urls: Set[Host]): Config \n")),(0,o.kt)("h2",{id:"urldetectoroptions"},"UrlDetectorOptions"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"UrlDetectorOptions")," is a Sum type, with all the case objects defined in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/lambdaworks/scurl-detector/blob/main/src/main/scala/io/lambdaworks/detection/UrlDetectorOptions.scala"},"UrlDetectorOptions.scala")," file."),(0,o.kt)("h2",{id:"extracting"},"Extracting"),(0,o.kt)("p",null,"In order to extract URLs from a ",(0,o.kt)("inlineCode",{parentName:"p"},"String")," using an instance of ",(0,o.kt)("inlineCode",{parentName:"p"},"UrlDetector"),", you need to call the ",(0,o.kt)("inlineCode",{parentName:"p"},"extract")," method with that ",(0,o.kt)("inlineCode",{parentName:"p"},"String"),", which will return ",(0,o.kt)("inlineCode",{parentName:"p"},"Set[AbsoluteUrl]"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"def extract(content: String): Set[AbsoluteUrl]\n")),(0,o.kt)("p",null,"If a URL inside the specified ",(0,o.kt)("inlineCode",{parentName:"p"},"content")," doesn't have a scheme specified, it will be returned with a http scheme."))}d.isMDXComponent=!0}}]);
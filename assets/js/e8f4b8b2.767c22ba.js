"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[120],{504:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var s=r(5893),o=r(1151);const i={id:"overview_usage",title:"Usage"},n=void 0,c={unversionedId:"overview/overview_usage",id:"overview/overview_usage",title:"Usage",description:"URLs",source:"@site/../docs/overview/overview_usage.md",sourceDirName:"overview",slug:"/overview/overview_usage",permalink:"/scurl-detector/overview/overview_usage",draft:!1,unlisted:!1,editUrl:"https://github.com/lambdaworks/scurl-detector/edit/main/docs/overview/overview_usage.md",tags:[],version:"current",frontMatter:{id:"overview_usage",title:"Usage"},sidebar:"docs",previous:{title:"Overview",permalink:"/scurl-detector/overview/overview_index"},next:{title:"Example",permalink:"/scurl-detector/overview/overview_example"}},l={},a=[{value:"URLs",id:"urls",level:2},{value:"UrlDetector",id:"urldetector",level:2},{value:"UrlDetectorOptions",id:"urldetectoroptions",level:2},{value:"Extracting",id:"extracting",level:2}];function d(e){const t=Object.assign({h2:"h2",p:"p",a:"a",code:"code",pre:"pre"},(0,o.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"urls",children:"URLs"}),"\n",(0,s.jsxs)(t.p,{children:["This library uses the ",(0,s.jsx)(t.a,{href:"https://github.com/lemonlabsuk/scala-uri",children:"scala-uri"})," library for representing URLs."]}),"\n",(0,s.jsx)(t.h2,{id:"urldetector",children:"UrlDetector"}),"\n",(0,s.jsxs)(t.p,{children:["To use the Scala URL Detector library, you need to import the ",(0,s.jsx)(t.code,{children:"UrlDetector"})," class:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:"import io.lambdaworks.detection.UrlDetector\n"})}),"\n",(0,s.jsxs)(t.p,{children:["An ",(0,s.jsx)(t.code,{children:"apply"})," method is defined inside the companion object for instantiating a ",(0,s.jsx)(t.code,{children:"UrlDetector"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:"object UrlDetector {\n\n  def apply(options: UrlDetectorOptions): UrlDetector\n  \n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Where ",(0,s.jsx)(t.code,{children:"options"})," specify the configuration of the ",(0,s.jsx)(t.code,{children:"UrlDetector"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["If you want to instantiate a ",(0,s.jsx)(t.code,{children:"UrlDetector"})," with the default configuration, you can use ",(0,s.jsx)(t.code,{children:"UrlDetector.default"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:"object UrlDetector {\n\n  lazy val default: UrlDetector = UrlDetector(UrlDetectorOptions.Default)\n\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You can create a new ",(0,s.jsx)(t.code,{children:"UrlDetector"})," from an existing one using the following ",(0,s.jsx)(t.code,{children:"UrlDetector"})," methods:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:"def withAllowed(host: Host, hosts: Host*): UrlDetector\n\ndef withDenied(host: Host, hosts: Host*): UrlDetector\n\ndef withOptions(options: UrlDetectorOptions): UrlDetector\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Where with ",(0,s.jsx)(t.code,{children:"withAllowed"})," we specify hosts of URLs which the detector is supposed to detect, while with ",(0,s.jsx)(t.code,{children:"withDenied"})," we specify hosts of URLs which the detector should ignore. You don't have to specify a www subdomain for hosts, as it is assumed. Unless another subdomain is specified, all possible subdomains will be matched."]}),"\n",(0,s.jsx)(t.h2,{id:"urldetectoroptions",children:"UrlDetectorOptions"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"UrlDetectorOptions"})," is a Sum type, with all the case objects defined in the ",(0,s.jsx)(t.a,{href:"https://github.com/lambdaworks/scurl-detector/blob/main/src/main/scala/io/lambdaworks/detection/UrlDetectorOptions.scala",children:"UrlDetectorOptions.scala"})," file."]}),"\n",(0,s.jsx)(t.h2,{id:"extracting",children:"Extracting"}),"\n",(0,s.jsxs)(t.p,{children:["In order to extract URLs from a ",(0,s.jsx)(t.code,{children:"String"})," using an instance of ",(0,s.jsx)(t.code,{children:"UrlDetector"}),", you need to call the ",(0,s.jsx)(t.code,{children:"extract"})," method with that ",(0,s.jsx)(t.code,{children:"String"}),", which will return ",(0,s.jsx)(t.code,{children:"Set[AbsoluteUrl]"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-scala",children:"def extract(content: String): Set[AbsoluteUrl]\n"})}),"\n",(0,s.jsxs)(t.p,{children:["If a URL inside the specified ",(0,s.jsx)(t.code,{children:"content"})," doesn't have a scheme specified, it will be returned with a http scheme."]})]})}const h=function(e={}){const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},1151:(e,t,r)=>{r.d(t,{Zo:()=>c,ah:()=>i});var s=r(7294);const o=s.createContext({});function i(e){const t=s.useContext(o);return s.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const n={};function c({components:e,children:t,disableParentContext:r}){let c;return c=r?"function"==typeof e?e({}):e||n:i(e),s.createElement(o.Provider,{value:c},t)}}}]);